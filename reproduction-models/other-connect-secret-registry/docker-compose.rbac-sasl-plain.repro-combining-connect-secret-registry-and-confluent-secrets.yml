---
version: '3.5'
services:

  connect:
    volumes:
      - ../../environment/rbac-sasl-plain/scripts/security/client_sasl_plain.config:/etc/kafka/secrets/client_sasl_plain.config
      - ../../reproduction-models/other-connect-secret-registry/repro-combining-connect-secret-registry-and-confluent-secrets/secrets:/etc/kafka/secrets
      - ../../reproduction-models/other-connect-secret-registry/repro-combining-connect-secret-registry-and-confluent-secrets/ensure:/etc/confluent/docker/ensure

    environment:
      # in newer version, it is located in /usr/share/filestream-connectors
      CONNECT_PLUGIN_PATH: /usr/share/java/,/usr/share/confluent-hub-components/,/usr/share/filestream-connectors
      ### Secret Provider
      CONNECT_REST_EXTENSION_CLASSES: io.confluent.connect.security.ConnectSecurityExtension,io.confluent.connect.secretregistry.ConnectSecretRegistryExtension
      CONNECT_CONFIG_PROVIDERS: "secret,securepass"
      CONNECT_CONFIG_PROVIDERS_SECRET_CLASS: "io.confluent.connect.secretregistry.rbac.config.provider.InternalSecretConfigProvider"
      CONNECT_CONFIG_PROVIDERS_SECRET_PARAM_MASTER_ENCRYPTION_KEY: my_password
      CONNECT_CONFIG_PROVIDERS_SECRET_PARAM_KAFKASTORE_BOOTSTRAP_SERVERS: broker:10091
      CONNECT_CONFIG_PROVIDERS_SECRET_PARAM_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_CONFIG_PROVIDERS_SECRET_PARAM_KAFKASTORE_SASL_MECHANISM: 'OAUTHBEARER'
      CONNECT_CONFIG_PROVIDERS_SECRET_PARAM_KAFKASTORE_SASL_LOGIN_CALLBACK_HANDLER_CLASS: "io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler"
      CONNECT_CONFIG_PROVIDERS_SECRET_PARAM_KAFKASTORE_SASL_JAAS_CONFIG: $${securepass:/etc/kafka/secrets/secret.txt:my-config-file.properties/my-secret-property}

      ### Confluent secrets
      CONNECT_CONFIG_PROVIDERS_SECUREPASS_CLASS: io.confluent.kafka.security.config.provider.SecurePassConfigProvider
      CUB_CLASSPATH: "/etc/confluent/docker/docker-utils.jar:/usr/share/java/confluent-security/connect/*:/usr/share/java/kafka/*:/usr/share/java/cp-base/*:/usr/share/java/cp-base-new/*"
      CONFLUENT_SECURITY_MASTER_KEY: ${CONFLUENT_SECURITY_MASTER_KEY}


# ===> Check if Kafka is healthy ...
# [2022-01-28 14:05:34,920] WARN Error initializing InternalSecretConfigProvider (io.confluent.connect.secretregistry.rbac.config.provider.InternalSecretConfigProvider:65)
# org.apache.kafka.common.KafkaException: Failed to create new KafkaAdminClient
#   at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:587)
#   at org.apache.kafka.clients.admin.KafkaAdminClient.createInternal(KafkaAdminClient.java:516)
#   at org.apache.kafka.clients.admin.Admin.create(Admin.java:133)
#   at org.apache.kafka.clients.admin.AdminClient.create(AdminClient.java:39)
#   at io.confluent.kafka.secretregistry.storage.KafkaStore.createOrVerifySecretTopic(KafkaStore.java:156)
#   at io.confluent.kafka.secretregistry.storage.KafkaStore.init(KafkaStore.java:108)
#   at io.confluent.kafka.secretregistry.storage.KafkaSecretRegistry.initStore(KafkaSecretRegistry.java:147)
#   at io.confluent.connect.secretregistry.rbac.config.provider.InternalSecretConfigProvider.initSecretRegistry(InternalSecretConfigProvider.java:59)
#   at io.confluent.connect.secretregistry.rbac.config.provider.InternalSecretConfigProvider.configure(InternalSecretConfigProvider.java:70)
#   at org.apache.kafka.common.config.AbstractConfig.instantiateConfigProviders(AbstractConfig.java:576)
#   at org.apache.kafka.common.config.AbstractConfig.resolveConfigVariables(AbstractConfig.java:519)
#   at org.apache.kafka.common.config.AbstractConfig.<init>(AbstractConfig.java:112)
#   at org.apache.kafka.common.config.AbstractConfig.<init>(AbstractConfig.java:146)
#   at org.apache.kafka.clients.admin.AdminClientConfig.<init>(AdminClientConfig.java:241)
#   at org.apache.kafka.clients.admin.Admin.create(Admin.java:143)
#   at org.apache.kafka.clients.admin.AdminClient.create(AdminClient.java:49)
#   at io.confluent.admin.utils.ClusterStatus.isKafkaReady(ClusterStatus.java:138)
#   at io.confluent.admin.utils.cli.KafkaReadyCommand.main(KafkaReadyCommand.java:150)
# Caused by: java.lang.IllegalArgumentException: Login module control flag is not available in the JAAS config
#   at org.apache.kafka.common.security.JaasConfig.loginModuleControlFlag(JaasConfig.java:85)
#   at org.apache.kafka.common.security.JaasConfig.parseAppConfigurationEntry(JaasConfig.java:111)
#   at org.apache.kafka.common.security.JaasConfig.<init>(JaasConfig.java:63)
#   at org.apache.kafka.common.security.JaasContext.load(JaasContext.java:98)
#   at org.apache.kafka.common.security.JaasContext.loadClientContext(JaasContext.java:92)
#   at org.apache.kafka.common.network.ChannelBuilders.create(ChannelBuilders.java:206)